 Basic Llist reversing is done by : https://www.geeksforgeeks.org/dsa/reverse-a-linked-list/
 # Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def reverseBetween(self, head: Optional[ListNode], left: int, right: int) -> Optional[ListNode]:
        index = 1
        start = None
        end = None
        sh = None
        rh= None
        current = head
        prev = None
        next_ = None

        while current:
            if index+1 == left:
                sh = current
            if index == left:
                start = current
            if index == right:
                end = current
            index += 1
            current = current.next

        rh = end.next

        current = start

        while prev != end:
            next_=current.next
            current.next=prev
            prev=current
            current=next_
        
        start.next = rh
        if sh is None:
            pass
        else:
            sh.next = end
            return head
        return end
        


        